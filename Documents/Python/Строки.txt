Метод capitalize()

Метод capitalize() возвращает копию строки s,
 в которой первый символ имеет верхний регистр,
 а все остальные символы имеют нижний регистр.

Метод swapcase()

Метод swapcase() возвращает копию строки s, 
в которой все символы, имеющие верхний регистр, 
преобразуются в символы нижнего регистра и наоборот.

Метод title()

Метод title() возвращает копию строки s, 
в которой первый символ каждого слова переводится в верхний регистр.

Метод lower()

Метод lower() возвращает копию строки s, в которой все символы имеют нижний регистр.

Метод upper()

Метод upper() возвращает копию строки s, в которой все символы имеют верхний регистр.

Метод count()

Метод count(<sub>, <start>, <end>) считает количество непересекающихся 
вхождений подстроки <sub> в исходную строку s.

Метод startswith()

Метод startswith(<suffix>, <start>, <end>) определяет начинается ли исходная
строка s подстрокой <suffix>. Если исходная строка начинается с подстроки <suffix>,
метод возвращает значение True, а если нет, то  False.

Методы find(), rfind()

Метод find(<sub>, <start>, <end>) находит индекс первого вхождения подстроки <sub> 
в исходной строке s. Если строка s не содержит подстроки <sub>, то метод возвращает
 значение -1. Мы можем использовать данный метод наравне с оператором in для проверки: 
содержит ли заданная строка некоторую подстроку или нет.
Метод rfind(<sub>, <start>, <end>) идентичен методу find(<sub>, <start>, <end>), 
за тем исключением, что он ищет первое вхождение подстроки <sub> начиная с конца строки s.

Метод strip()

Метод strip() возвращает копию строки s у которой удалены все пробелы 
стоящие в начале и конце строки.

Метод replace()

Метод replace(<old>, <new>) возвращает копию s со всеми вхождениями подстроки <old>, 
замененными на <new>.
Метод replace() может принимать опциональный третий аргумент <count>,  
который определяет количество замен.

Метод isalnum()

Метод isalnum() определяет, состоит ли исходная строка из буквенно-цифровых символов. 
Метод возвращает значение True если исходная строка является непустой и состоит только 
из буквенно-цифровых символов и False в противном случае.

Метод isalpha()

Метод isalpha() определяет, состоит ли исходная строка из буквенных символов. 
Метод возвращает значение True если исходная строка является непустой и состоит 
только из буквенных символов и False в противном случае.

Метод isdigit()

Метод isdigit() определяет, состоит ли исходная строка только из цифровых символов. 
Метод возвращает значение True если исходная строка является непустой и состоит только
 из цифровых символов и False в противном случае.

Метод islower()

Метод islower() определяет, являются ли все буквенные символы исходной строки строчными 
(имеют нижний регистр). Метод возвращает значение True если все буквенные символы исходной 
строки являются строчными и False в противном случае. Все неалфавитные символы игнорируются!

Метод isupper()

Метод isupper() определяет, являются ли все буквенные символы исходной строки заглавными 
(имеют верхний регистр). Метод возвращает значение True если все буквенные символы исходной 
строки являются заглавными и False в противном случае. Все неалфавитные символы игнорируются!

Метод isspace()

Метод isspace() определяет, состоит ли исходная строка только из пробельных символов. 
Метод возвращает значение True если строка состоит только из пробельных символов и 
False в противном случае.

Функция chr

Функция chr позволяет определить по коду символа сам символ. 
Аргументом данной функции является численный код.

Функция ord

Функция ord позволяет определить код некоторого символа в таблице символов Unicode. 
Аргументом данной функции является одиночный символ.