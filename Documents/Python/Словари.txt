Методы keys(), values(), items()

Словарный метод keys() возвращает список ключей всех элементов словаря.

Следующий программный код:

capitals = {'Россия': 'Москва', 'Франция': 'Париж', 'Чехия': 'Прага'}

for key in capitals.keys():     # итерируем по списку ['Россия', 'Франция', 'Чехия']
    print(key)

выводит (порядок элементов может отличаться):

Россия
Франция
Чехия

Словарный метод values() возвращает список значений всех элементов словаря.

Следующий программный код:

capitals = {'Россия': 'Москва', 'Франция': 'Париж', 'Чехия': 'Прага'}

for value in capitals.values():     # итерируем по списку ['Москва', 'Париж', 'Прага']
    print(value)

выводит (порядок элементов может отличаться):

Москва
Париж
Прага

Словарный метод items() возвращает список всех элементов словаря, состоящий из кортежей пар (ключ, значение).

Следующий программный код:

capitals = {'Россия': 'Москва', 'Франция': 'Париж', 'Чехия': 'Прага'}

for item in capitals.items():
    print(item)

выводит (порядок элементов может отличаться):

('Россия', 'Москва')
('Франция', 'Париж')
('Чехия', 'Прага')

Метод get()

Мы можем получить значение в словаре по ключу с помощью индексации, то есть квадратных скобок. 
Однако как мы знаем, в случае отсутствия ключа будет происходить ошибка KeyError.
Для того, чтобы избежать возникновения ошибки в случае отсутствия ключа в словаре 
можно использовать метод get(), способный кроме ключа принимать и второй аргумент 
— значение, которое вернется, если заданного ключа нет. Когда второй аргумент не 
указан, то метод в случае отсутствия ключа возвращает None.

Метод update()

Метод update() – реализует своеобразную операцию конкатенации для словарей. 
Он объединяет ключи и значения одного словаря с ключами и значениями другого. 
При совпадении ключей в итоге сохранится значение словаря, указанного в качестве 
аргумента метода update().
В Python 3.9 появились операторы | и |= которые реализуют операцию конкатенации словарей.

Метод setdefault()

Метод setdefault() позволяет получить значение из словаря по заданному ключу, автоматически добавляя элемент словаря, если он отсутствует.

Метод принимает два аргумента:

     key: ключ, значение по которому следует получить, если таковое имеется в словаре, либо создать.
     default: значение, которое будет использовано при добавлении нового элемента в словарь.

В зависимости от значений параметров key и default возможны следующие сценарии 
работы данного метода.

Удаление элементов из словаря

Существует несколько способов удаления элементов из словаря:

    оператор del;
    метод pop();
    метод popitem();
    метод clear().

